buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'maven'

allprojects {
    tasks.withType(JavaCompile) {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = "${config.version}.${config.build_number}"
group = config.group
archivesBaseName = config.mod_name

repositories {
    maven {
        url "http://maven.amadornes.com/"
    }
    maven {
        url "http://mvn.rx14.co.uk/shadowfacts/"
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
}

sourceSets.main {
    java.srcDirs += 'src/test/java'
    resources.srcDirs += 'src/test/resources'
}

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "run"
    mappings = config.mc_mappings

    replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version

    replaceIn 'NamelessMod.kt'
}

configurations {
    required
    compile.extendsFrom(required)
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "net.shadowfacts:Forgelin:1.4.1"
}

compileKotlin {
    kotlinOptions {
        javaParameters = true
        jvmTarget = 1.8
    }
}

jar {

    archiveName "${archivesBaseName}-${version}.jar"
    dependsOn configurations.compile
    from {
        configurations.required.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'FMLAT': 'librarianlib_at.cfg'
        //todo add fmlloadingplugin attribute
    }

}

task sourceJar(type: Jar, dependsOn: "sourceMainJava", overwrite: true) {
    from "src/main/java"
    from "src/test/java"
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives sourceJar
    archives deobfJar
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

idea {
    module {
        inheritOutputDirs = true

        testSourceDirs -= file('src/test/java')
        testSourceDirs -= file('src/test/resources')
    }
    project {
        languageLevel = '1.8'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}
